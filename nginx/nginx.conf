user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    #gzip  on;

	server {
		listen 80;

		server_name _;
		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl;

		# SSL configuration
		ssl_certificate /etc/sslcerts/cert.pem; # Path to your SSL certificate
		ssl_certificate_key /etc/sslcerts/cert.key; # Path to your SSL certificate key
		ssl_protocols TLSv1.2 TLSv1.3; # Recommended protocols
		ssl_prefer_server_ciphers on;
		ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

		# HSTS (optional but recommended)
		# Enforces SSL for users that have already visited your site. Use with caution as it commits you to SSL.
		add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

		location / {
			proxy_pass http://nextjs:3000; # Adjust if your app runs on a different port
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;

			# Timeout settings
			proxy_connect_timeout 60s;
			proxy_send_timeout 60s;
			proxy_read_timeout 60s;
		}
	}
}
