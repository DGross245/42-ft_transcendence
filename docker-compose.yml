version: '3.7'
services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    healthcheck:
      test: curl -s http://localhost:9200 >/dev/null || exit 1
      interval: 5s
      timeout: 5s
      retries: 50
    restart: always
    networks:
      - lognet

  setupelastic:
    container_name: setupelastic
    image: curlimages/curl:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: "no"
    entrypoint: 'curl -X POST http://elasticsearch:9200/_security/user/${KIBANA_USER}/_password -H "Content-Type: application/json" -d "{\"password\": \"${KIBANA_PASSWORD}\"}" -u elastic:${ELASTIC_PASSWORD}'
    networks:
      - lognet

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.12.2
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    depends_on:
      - elasticsearch
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    networks:
      - lognet

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.12.2
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ./ssl:/usr/share/kibana/config/ssl
    depends_on:
      - elasticsearch
    environment:
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - KIBANA_ENCRYPTION_KEY=${KIBANA_ENCRYPTION_KEY}
    restart: always
    ports:
      - "5601:5601"
    networks:
      - lognet

  nextjs:
    container_name: nextjs
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - logstash
    environment:
      - LOGSTASH_HOST=logstash:5001
    ports:
      - "3000:3000"
    networks:
      - lognet

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/sslcerts/:ro
    depends_on:
      - nextjs
    networks:
      - lognet

networks:
  lognet: